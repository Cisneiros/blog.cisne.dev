{"template":"__react_static_root__/src/containers/post","sharedHashesByProp":{},"data":{"postData":{"title":"Tipos primitivos de m√©tricas no Prometheus","date":"2020-02-11T00:00:00-03:00","slug":"tipos-primitivos-de-metricas-no-prometheus","tags":["prometheus","monitoring"],"filePath":"2020-02-11-tipos-primitivos-de-metricas-no-prometheus.md","content":"O Prometheus tem dois tipos primitivos e dois tipos complexos de m√©tricas. Os\ntipos complexos reusam os tipos primitivos, usando m√∫ltiplas s√©ries temporais\npara fazer o que parece ser apenas uma quando consultado com as fun√ß√µes de\nagrega√ß√£o espec√≠ficas.\n\nVamos dar uma olhada nos dois tipos primitivos: **contadores** e **medidas**.\n\n<!-- summary-break -->\n\n## üßÆ Contador (counter)\n\nUm contador √© um n√∫mero que sempre aumenta (ou fica parado). Ele representa o\nn√∫mero de vezes que alguma coisa aconteceu. Alguns exemplos:\n\n- N√∫mero de visualiza√ß√µes do seu site\n- N√∫mero de transa√ß√µes de cart√£o de cr√©dito no seu sistema (voc√™ n√£o pode\n  desfazer uma transa√ß√£o -- voc√™ pode estorn√°-la, mas ela aconteceu e isto √©\n  imut√°vel)\n- N√∫mero de deploys da sua aplica√ß√£o\n\nComo voc√™ pode ver, um contador √© algo que normalmente se pensa em termos de\n**n√∫mero de vezes que `x` aconteceu**.\n\nAgora, aplica√ß√µes que exportam m√©tricas para o Prometheus n√£o persistem estas\nm√©tricas entre rein√≠cios, ent√£o o contador vai voltar para zero quando a\naplica√ß√£o tiver um deploy, travar ou qualquer outro evento que a reinicie. Ent√£o\ncomo contadores s√£o √∫teis?\n\nUm contador por si s√≥ √© dif√≠cil de entender. √â a√≠ que a fun√ß√£o `rate` entra.\n`rate` recebe uma s√©rie temporal de um contador, um tamanho de janela em\nunidades de tempo, e retorna uma s√©rie temporal de `eventos por segundo`. A\nfun√ß√£o `rate` e sua fam√≠lia sabem lidar com rein√≠cios de contadores.\n\nPor exemplo, se uma m√©trica de contador tinha o valor de `50` na √∫ltima coleta,\ne agora tem o valor `3`, a aplica√ß√£o tem que ter reiniciado. A fun√ß√£o `rate` n√£o\nvai dar como resultado \"eventos por segundo negativo\" aqui. Ela vai, na verdade,\ndizer que o contador aumentou em `3` unidades entre as coletas (de `50` para\n`53`). Isso quer dizer que voc√™ pode perder alguns dados se, por exemplo, entre\nas coletas o contador foi para `52` e depois reiniciou. Mas isso √© ok e o\nPrometheus deve ser usado em situa√ß√µes em que essas perdas espor√°dicas pelos\nrein√≠cios n√£o sejam um problema (a maior parte das situa√ß√£o de monitoramento\ndeve estar ok quanto a isso).\n\n## üìà Medida (gauge)\n\nAntes de mais nada, eu n√£o consegui pensar numa tradu√ß√£o melhor pra _gauge_. Outra tradu√ß√£o que pode ajudar (ou n√£o √© **bitola**). Enfim‚Ä¶\n\nUma medida √© um n√∫mero que pode subir, descer ou manter-se parado. Ela\nrepresenta um retrato instant√¢neo de uma quantidade observ√°vel. Alguns exemplos:\n\n- Quantidade atual de usu√°rios online\n- Quantidade atual de compras finalizadas com envio pendente (vai subir quando\n  uma nova compra for criada e descer quando uma compra for enviada)\n- Quantidade atual de CPU em utiliza√ß√£o, percentual\n\nEsses exemplos refor√ßam o fato que medidas normalmente significam uma\n*quantidade atual de coisas*, absoluta ou relativa.\n\nComo √© um retrato do estado atual, uma m√©trica de medida pode ser lida sozinha e\ndeve fazer sentido. Voc√™ pode tamb√©m tra√ß√°-la sobre o tempo para ver tend√™ncias.\nSe a aplica√ß√£o reiniciar, ela vai come√ßar a reportar o valor atual da m√©trica de\nnovo quando iniciar, ent√£o voc√™ n√£o precisa de um tratamento especial aqui.\n\n## O que vem depois?\n\nN√£o s√≥ de contadores e _gauges_ vive o Prometheus. Ok, podemos at√© dizer que sim. O Prometheus tamb√©m tem dois tipos complexos de m√©tricas: **histogramas e sum√°rios** que s√£o construidos como conjuntos desses de m√©tricas desses dois tipos primitivos. [D√° uma lida sobre no outro post!](/tipos-complexos-de-metricas-no-prometheus/)\n","readingTime":3,"summary":"O Prometheus tem dois tipos primitivos e dois tipos complexos de m√©tricas. Os\ntipos complexos reusam os tipos primitivos, usando m√∫ltiplas s√©ries temporais\npara fazer o que parece ser apenas uma quando consultado com as fun√ß√µes de\nagrega√ß√£o espec√≠ficas.\n\nVamos dar uma olhada nos dois tipos primitivos: **contadores** e **medidas**.\n\n"}},"path":"tipos-primitivos-de-metricas-no-prometheus"}
