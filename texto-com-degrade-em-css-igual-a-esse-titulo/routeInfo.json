{"template":"__react_static_root__/src/containers/post","sharedHashesByProp":{},"data":{"postData":{"title":"Texto com degrad√™ em CSS (igual a esse t√≠tulo)","date":"2020-09-16T00:00:00-03:00","slug":"texto-com-degrade-em-css-igual-a-esse-titulo","tags":["css","frontend"],"filePath":"2020-09-16-texto-com-degrade-em-css-igual-a-esse-titulo.md","content":"A cor do texto em CSS √© definida usando a propriedade `color`. Mas h√° maneiras de usar algo mais complexo do que apenas uma cor? D√° sim, √© s√≥ olhar para o t√≠tulo deste post. O texto nele, ao inv√©s de ter uma cor apenas, √© preenchido por um degrad√™ (ou gradiente). Vamos fazer isso s√≥ com CSS!\n\n<!-- summary-break -->\n\n:::live result-first\n```css\n/* Exemplo apenas com `color` */\n.single-color {\n  color: steelblue;\n}\n\n/* Agora, colocando um degrad√™ */\n.gradient {\n  /* Primeiro passo: definir um degrad√™ como fundo */\n  background-image: linear-gradient(to bottom, rebeccapurple, steelblue, turquoise);\n  \n  /* Segundo passo: apagar do fundo tudo que n√£o estiver imediatamente atr√°s de texto */\n  background-clip: text;\n  -webkit-background-clip: text; /* Alguns navegadores precisam do prefixo */\n\n  /* Terceiro passo: apagar o texto, deixando apenas o fundo atr√°s dele */\n  -webkit-text-fill-color: transparent;\n\n  /* Cor que contraste com o degrad√™, caso o navegador n√£o suporte `background-clip: text` */\n  color: black;\n  \n}\n\n/* N√£o relacionado ao degrad√™, apenas para melhorar a visualiza√ß√£o */\np {\n  font-size: 3rem;\n  font-weight: bold;\n  line-height: 1.1;\n}\n```\n```html\n<p class=\"single-color\">Eu tenho s√≥ uma cor.</p>\n<p class=\"gradient\">Eu sou colorido! ü§ü</p>\n```\n:::/live\n\nSe ignorarmos os coment√°rios, com 3 linhas a mais temos um texto com degrad√™! Eu coloquei acima o que cada linha do CSS faz, mas vamos dar uma r√°pida passada pelo que est√° acontecendo aqui. Vamos montar cada etapa do exemplo acima.\n\n## Adicionar um degrad√™\n\nPrimeiro, precisamos ter um degrad√™. Em CSS, degrad√™s s√£o suportados como **imagens de fundo**. Usando `background-image`, podemos criar um degrad√™s lineares, radiais e c√¥nicos. No exemplo acima, usei um `linear-gradient` no sentido de cima para baixo (`to bottom`).\n\n:::live result-first\n```css\n.gradient {\n  background-image: linear-gradient(to bottom, rebeccapurple, steelblue, turquoise);\n  color: black;\n}\n\np {\n  font-size: 3rem;\n  font-weight: bold;\n  line-height: 1.1;\n}\n```\n```html\n<p class=\"gradient\">Eu sou colorido! ü§ü</p>\n```\n:::/live\n\nAdicionalmente, eu coloquei um `color` no texto que constraste com o degrad√™. Essa cor n√£o vai ser utilizada no nosso efeito, e est√° l√° apenas para contrastar com o degrad√™ em navegadores antigos que n√£o permitam transformar o fundo em texto, como vamos fazer agora.\n\n## Transformar o fundo em texto\n\nVamos agora usar a propriedade `background-clip`. Ela serve para limitar a visualiza√ß√£o do plano de fundo do elemento. Vamos usar o valor `text`, que significa \"apenas exiba o background que esteja embaixo de algum texto.\n\n:::live result-first\n```css\n.gradient {\n  background-image: linear-gradient(to bottom, rebeccapurple, steelblue, turquoise);\n  color: black;\n\n  /* Adicionado: */\n  background-clip: text;\n  -webkit-background-clip: text;\n}\n\np {\n  font-size: 3rem;\n  font-weight: bold;\n  line-height: 1.1;\n}\n```\n```html\n<p class=\"gradient\">Eu sou colorido! ü§ü</p>\n```\n:::/live\n\n‚Ä¶ ‚Ä¶ ‚Ä¶ u√©. **O degrad√™ sumiu?** Mais ou menos. Ele ainda est√° l√°, mas n√£o podemos v√™-lo pois o `background-clip: text` **n√£o esconde o pr√≥prio texto**. Ou seja, o background est√° limitado apenas a √°rea que estava embaixo de um texto, e o pr√≥prio texto est√° aparecendo por cima dele, na cor preta (`color: black`). Precisamos de um toque final para chegar no nosso efeito desejado.\n\n## Escondendo o texto\n\nO WebKit definiu uma propriedade que serve para sobrescrever a `color` do texto, que √© a `-webkit-text-fill-color`. Se ela estiver definida, ela tem prefer√™ncia em rela√ß√£o √† `color`. Vamos us√°-la para deixar o texto transparente (`transparent`) e, assim conseguirmos ver o background que est√° atr√°s dele. Apesar do prefixo `-webkit`, ela √© [suportada por todos os navegadores modernos](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-text-fill-color#Browser_compatibility).\n\n:::live result-first\n```css\n.gradient {\n  background-image: linear-gradient(to bottom, rebeccapurple, steelblue, turquoise);\n  color: black;\n  background-clip: text;\n  -webkit-background-clip: text;\n\n  /* Adicionado: */\n  -webkit-text-fill-color: transparent;\n}\n\np {\n  font-size: 3rem;\n  font-weight: bold;\n  line-height: 1.1;\n}\n```\n```html\n<p class=\"gradient\">Eu sou colorido! ü§ü</p>\n```\n:::/live\n\nAlternativamente, poder√≠amos definir a cor do texto diretamente com `color: transparent`. Por√©m, usu√°rios em navegadores bem antigos, em que o `background-clip: text` n√£o funciona, n√£o iriam ver o texto. Estes navegadores n√£o v√£o ter suporte ao `-webkit-text-fill-color`, ent√£o a `color` vai aparecer. Note tamb√©m que, agora que estamos vendo o plano de fundo e n√£o o texto de fato, at√© Emoji vai aparecer nas cores do fundo. \n\nVale dizer que essas propriedades n√£o servem apenas para degrad√™s, mas para **qualquer plano de fundo do elemento**, como imagens. O processo √© o mesmo: definir o plano de fundo, limitar o plano de fundo ao texto e esconder o texto. [O suporte √© razoavelmente bom](https://developer.mozilla.org/en-US/docs/Web/CSS/background-clip#Browser_compatibility), incluindo em dispositivos m√≥veis. E, para os que n√£o suportam, h√° o _fallback_ que deixa o texto ainda vis√≠vel.\n","readingTime":4,"summary":"A cor do texto em CSS √© definida usando a propriedade `color`. Mas h√° maneiras de usar algo mais complexo do que apenas uma cor? D√° sim, √© s√≥ olhar para o t√≠tulo deste post. O texto nele, ao inv√©s de ter uma cor apenas, √© preenchido por um degrad√™ (ou gradiente). Vamos fazer isso s√≥ com CSS!\n\n"}},"path":"texto-com-degrade-em-css-igual-a-esse-titulo"}
