{"template":"__react_static_root__/src/containers/postList","sharedHashesByProp":{},"data":{"postDataList":[{"title":"Componentes com estado em Type­Script, estilo Clojure","date":"2020-07-04T00:00:00-03:00","slug":"componentes-com-estado-em-typescript-estilo-clojure","tags":["typescript"],"filePath":"2020-07-04-componentes-com-estado-em-typescript-estilo-clojure.md","content":null,"readingTime":5,"summary":"Uma das ideias da programação funcional é o uso de funções puras para definir a lógica da aplicação que você estiver fazendo. Isso traz várias vantagens, como a possibilidade de trabalhar com estruturas de dados imutáveis, o que diminui ou elimina uma classe de problemas de concorência.\n\nIsso é muito bonito, e eu recomendo essa abordagem, mas em algum momento você (tomara) vai precisar **causar efeitos colaterais no universo**. Seja ler ou escrever num banco de dados, interagir com um servidor ou cliente HTTP, com o sistema de arquivos, e por aí vai. E, nessa hora, separar estes efeitos colaterais ajuda muito a não misturar, sem querer, com a lógica que deveria ser pura.\n\n"}],"pagination":{"current":1,"count":1}},"path":"tag/typescript"}
