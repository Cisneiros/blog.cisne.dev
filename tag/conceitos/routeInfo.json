{"template":"__react_static_root__/src/containers/postList","sharedHashesByProp":{},"data":{"postDataList":[{"title":"Recursão de cauda — ou como não estourar a pilha","date":"2020-11-13T00:00:00-03:00","slug":"recursao-de-causa-ou-como-nao-estourar-a-pilha","tags":["conceitos"],"filePath":"2020-11-13-recursao-de-causa-ou-como-nao-estourar-a-pilha.md","content":null,"readingTime":10,"summary":"Quando precisamos realizar uma operação várias vezes, geralmente existem duas maneiras: iterativa e recursiva. Iterativa é quando utilizamos alguma estrutura de laço, como um `for` ou `while`, com uma variável de controle para saber quando parar. Recursiva é quando uma função decide **executar a si mesma** por entender que ainda precisa continuar processando. Toda iteração pode ser escrita como uma recursão e vice-versa. Recursões porém tem um risco associado: o **estouro da pilha**. Vamos entender o que isso significa e como escrever código recursivo evitando esse problema!\n\n"}],"pagination":{"current":1,"count":1}},"path":"tag/conceitos"}
